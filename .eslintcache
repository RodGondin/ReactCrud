[{"C:\\CrudReact2\\src\\index.js":"1","C:\\CrudReact2\\src\\App.js":"2","C:\\CrudReact2\\src\\Routes\\routes.js":"3","C:\\CrudReact2\\src\\Store\\Provider.js":"4","C:\\CrudReact2\\src\\Routes\\Private.jsx":"5","C:\\CrudReact2\\src\\Store\\Context.js":"6","C:\\CrudReact2\\src\\pages\\Login\\index.jsx":"7","C:\\CrudReact2\\src\\utils\\useStorage.js":"8","C:\\CrudReact2\\src\\utils\\storage.js":"9","C:\\CrudReact2\\src\\services\\api.js":"10","C:\\CrudReact2\\src\\pages\\Form\\index.jsx":"11","C:\\CrudReact2\\src\\pages\\Add\\index.jsx":"12"},{"size":244,"mtime":1610398519969,"results":"13","hashOfConfig":"14"},{"size":164,"mtime":1610398445280,"results":"15","hashOfConfig":"14"},{"size":748,"mtime":1610399568425,"results":"16","hashOfConfig":"14"},{"size":373,"mtime":1610322765000,"results":"17","hashOfConfig":"14"},{"size":423,"mtime":1610322765000,"results":"18","hashOfConfig":"14"},{"size":147,"mtime":1610322765000,"results":"19","hashOfConfig":"14"},{"size":2095,"mtime":1610409788791,"results":"20","hashOfConfig":"14"},{"size":429,"mtime":1610322765000,"results":"21","hashOfConfig":"14"},{"size":712,"mtime":1610322765000,"results":"22","hashOfConfig":"14"},{"size":114,"mtime":1610322765000,"results":"23","hashOfConfig":"14"},{"size":2782,"mtime":1610407815896,"results":"24","hashOfConfig":"14"},{"size":4798,"mtime":1610400246896,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1l7sish",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"C:\\CrudReact2\\src\\index.js",[],["52","53"],"C:\\CrudReact2\\src\\App.js",[],"C:\\CrudReact2\\src\\Routes\\routes.js",[],"C:\\CrudReact2\\src\\Store\\Provider.js",[],"C:\\CrudReact2\\src\\Routes\\Private.jsx",[],"C:\\CrudReact2\\src\\Store\\Context.js",[],"C:\\CrudReact2\\src\\pages\\Login\\index.jsx",["54"],"C:\\CrudReact2\\src\\utils\\useStorage.js",[],"C:\\CrudReact2\\src\\utils\\storage.js",[],"C:\\CrudReact2\\src\\services\\api.js",[],"C:\\CrudReact2\\src\\pages\\Form\\index.jsx",[],"C:\\CrudReact2\\src\\pages\\Add\\index.jsx",["55"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Form ,Button, Col } from 'react-bootstrap';\nimport api from \"../../services/api\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport './style.css'\n\nimport StoreContext from '../../Store/Context'\n\n\nfunction Add(){\n  const history = useHistory();\n  const {id} = useParams();\n  const [newUser, SetNewUser] = useState({\n    nome: \"\",\n    usuario: \"\",\n    email: \"\",\n    senha: \"\",\n    telefone: 0 ,\n    dataNascimento: \"\",\n    sexo: \"\",\n    idade: 0,\n    perfilId: 1\n  });\n\n  async function findUser(id){\n    const response = await api.get(`usuarios/${id}`)\n    SetNewUser(response.data)\n  }\n  useEffect(()=> {\n    console.log(id);\n    if (id !== undefined){\n      findUser(id)\n    }\n  },[])\n\n  const { token } = useContext(StoreContext);\n\n  var config = {\n    headers: {\n      'Authorization': `Bearer ${token}` \n    }\n  }\n\n  function onSubmit(e){\n    e.preventDefault();\n    if (id !== undefined){\n      api\n      .put(`/usuarios/${id}`, newUser, config)\n      .then(history.push('/table'));\n    }else{\n      api\n      .post(\"/usuarios\", newUser, config)\n      .then(res => {\n        console.log(res);\n        history.push('/table');\n      })\n      .catch((err) => {\n        console.error(\"ocorreu um erro\" + err);\n      });\n    }\n  };\n\n  function onChange(e){\n    const newValues={...newUser};\n    newValues[e.target.name]=e.target.value;\n    SetNewUser(newValues);\n  }\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      className=\"container form-new\"\n    >\n      \n      <Form.Row >\n        <Form.Group as={Col}>\n          <Form.Label className=\"form-label\">Nome</Form.Label>\n          <Form.Control\n            onChange={(e)=>onChange(e)}\n            name=\"nome\"\n            value={newUser.nome}\n            type=\"text\"\n            placeholder=\"digite seu nome completo\"\n          />\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label className=\"form-label\">Email</Form.Label>\n          <Form.Control\n            name=\"email\"\n            value={newUser.email}\n            onChange={(e)=>onChange(e)}\n            type=\"email\"\n            placeholder=\"digite seu email\"\n          />\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label className=\"form-label\">Telefone</Form.Label>\n          <Form.Control\n            name=\"telefone\"\n            value={newUser.telefone}\n            onChange={(e)=>onChange(e)}\n            type=\"number\"\n          />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row >\n        <Form.Group as={Col}>\n          <Form.Label className=\"form-label\">Usuário</Form.Label>\n          <Form.Control\n            name=\"usuario\"\n            value={newUser.usuario}\n            onChange={(e)=>onChange(e)}\n            type=\"text\"\n            placeholder=\"digite seu nome de usuário\"\n  \n          />\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label className=\"form-label\">Senha</Form.Label>\n          <Form.Control\n            name=\"senha\"\n            value={newUser.senha}\n            onChange={(e)=>onChange(e)}\n            type=\"password\"\n            placeholder=\"*********\"\n          />\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label className=\"form-label\">Data de nascimento</Form.Label>\n          <Form.Control\n            name=\"dataNascimento\"\n            value={newUser.dataNascimento}\n            onChange={(e)=>onChange(e)}\n            type=\"text\" \n            placeholder=\"01-01-0001\"\n          />\n        </Form.Group>\n\n        <Form.Group as={Col}>\n          <Form.Label className=\"form-label\">Idade</Form.Label>\n          <Form.Control\n            name=\"idade\"\n            value={newUser.idade}\n            onChange={(e)=>onChange(e)}\n            type=\"number\" \n          />\n        </Form.Group>\n      </Form.Row>\n    \n    \n      <Form.Row >\n        <Form.Group as={Col} >\n          <Form.Label>Sexo</Form.Label>\n          <Form.Control \n            name=\"sexo\"\n            value={newUser.sexo}\n            onChange={(e)=>onChange(e)}\n            type=\"text\"\n          >\n            {/* <option>Choose...</option> */}\n            \n            {/* <option>Feminino</option> */}\n          </Form.Control>\n          \n        </Form.Group>\n\n        <Form.Group as={Col} >\n          <Form.Label>Perfil</Form.Label>\n          <Form.Control\n            name=\"perfilId\"\n            value={newUser.perfilId}\n            onChange={(e)=>onChange(e)} \n            type=\"text\"\n          >\n            {/* <option>Choose...</option> */}\n            \n            {/* <option>Aluno</option> */}\n          </Form.Control>\n        </Form.Group>\n      </Form.Row>\n\n      <Button block variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n\n}\nexport default Add;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":19,"column":6,"nodeType":"62","endLine":19,"endColumn":8,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":34,"column":5,"nodeType":"62","endLine":34,"endColumn":7,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setToken'. Either include it or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [setToken]",{"range":"74","text":"75"},"Update the dependencies array to be: [id]",{"range":"76","text":"77"},[504,506],"[setToken]",[771,773],"[id]"]